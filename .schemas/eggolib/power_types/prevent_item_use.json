{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/eggolib/power_types/prevent_item_use.json",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"description": "eggolib:prevent_item_use\nPrevents the player from \"using\" (e.g: right-click action, such as eating, blocking, etc.) items.\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.",
			"markdownDescription": "### `eggolib:prevent_item_use`\nPrevents the player from \"using\" (e.g: right-click action, such as eating, blocking, etc.) items.\n## Power Type\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.\n\n[Power Type Documentation](https://origins.readthedocs.io/en/latest/json/power/)",
			"const": "eggolib:prevent_item_use"
		},
		"entity_action": {
			"description": "If specified, this action will be executed on the player that has the power upon being prevented from using an item.",
			"$ref": "../../entity_action.json"
		},
		"held_item_action": {
			"description": "If specified, this action will be executed on the item that was prevented from being used.",
			"$ref": "../../item_action.json"
		},
		"result_item_action": {
			"description": "If specified, this action will be executed on the item that is given upon being prevented from using an item.",
			"$ref": "../../item_action.json"
		},
		"item_condition": {
			"description": "If specified, only items that fulfills this condition will be prevented from being used.",
			"$ref": "../../item_condition.json"
		},
		"result_stack": {
			"description": "If specified, this item will be given to the player upon being prevented from using an item.",
			"$ref": "../../types/item_stack.json"
		},
		"hands": {
			"description": "Determines if the power should prevent the usage of items from the specified hand(s). Accepts \"main_hand\", \"off_hand\" or both.",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"const": "main_hand"
					},
					{
						"const": "off_hand"
					}
				]
			}
		},
		"priority": {
			"description": "Determines the execution priority of the power.",
			"type": "integer",
			"default": 0
		}
	}
}