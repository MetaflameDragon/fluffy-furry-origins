{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/entity_actions/passenger_action.json",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"description": "apoli:passenger_action\nExecutes an action on the passengers of the entity.\nEntity Action Types operate on an Entity. Some more specific actions only have an effect on more specific entity types (e.g. Exhaust (Entity Action Type) only works on a PlayerEntity, as other entities do not have a hunger bar). These are available to power/action types that provides a entity_action object field.",
			"markdownDescription": "### `apoli:passenger_action`\nExecutes an action on the passengers of the entity.\n## Entity Action Type\nEntity Action Types operate on an Entity. Some more specific actions only have an effect on more specific entity types (e.g. Exhaust (Entity Action Type) only works on a PlayerEntity, as other entities do not have a hunger bar). These are available to power/action types that provides a entity_action object field.\n\n[Entity Action Types Documentation](https://origins.readthedocs.io/en/latest/types/entity_Action_types/)",
			"enum": [
				"apoli:passenger_action",
				"origins:passenger_action"
			]
		},
		"action": {
			"description": "If specified, executes the specified entity action type on the passenger entity.",
			"$ref": "../../entity_action.json"
		},
		"bientity_action": {
			"description": "If specified, executes the specified bi-entity action type that can execute on both the passenger and the entity that's being ridden.",
			"$ref": "../../bientity_action.json"
		},
		"bientity_condition": {
			"description": "If specified, only execute the specified actions if the bi-entity condition is fulfilled.",
			"$ref": "../../bientity_condition.json"
		},
		"recursive": {
			"description": "If set to true, executes the specified actions on all the passenger entities, if there are more than one.",
			"type": "boolean",
			"default": false
		}
	}
}