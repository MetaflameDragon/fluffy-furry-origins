{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/power_types/overlay.json",
	"type": "object",
	"required": [
		"type",
		"texture",
		"draw_mode",
		"draw_phase"
	],
	"properties": {
		"type": {
			"description": "apoli:overlay\nApplies an overlay to the player's screen.\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.",
			"markdownDescription": "### `apoli:overlay`\nApplies an overlay to the player's screen.\n## Power Type\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.\n\n[Power Type Documentation](https://origins.readthedocs.io/en/latest/json/power/)",
			"enum": [
				"apoli:overlay",
				"origins:overlay"
			]
		},
		"texture": {
			"description": "The namespace and ID of the texture to use as an overlay.",
			"$ref": "../../types/identifier.json"
		},
		"strength": {
			"description": "If the \"texture\" draw mode is used, it determines the alpha (transparency) value of the texture. If the \"nausea\" draw mode is used, it determines the value of how the texture is stretched (1.0 = screen size).",
			"type": "number",
			"default": 1,
			"minimum": 0,
			"maximum": 1
		},
		"red": {
			"description": "Value by which the red component of the texture will be multiplied.",
			"type": "number",
			"default": 1,
			"minimum": 0,
			"maximum": 1
		},
		"green": {
			"description": "Value by which the green component of the texture will be multiplied.",
			"type": "number",
			"default": 1,
			"minimum": 0,
			"maximum": 1
		},
		"blue": {
			"description": "Value by which the blue component of the texture will be multiplied.",
			"type": "number",
			"default": 1,
			"minimum": 0,
			"maximum": 1
		},
		"draw_mode": {
			"description": "Determines whether to treat black as transparent or draw the texture as is (\"nausea\" or \"texture\" respectively).",
			"type": "string",
			"enum": [
				"nausea",
				"texture"
			]
		},
		"draw_phase": {
			"description": "Determines if the overlay should render below or above the HUD (\"below_hud\" or \"above_hud\" respectively).",
			"type": "string",
			"enum": [
				"above_hud",
				"below_hud"
			]
		},
		"hide_with_hud": {
			"description": "Determines if the overlay should be hidden if the HUD elements are hidden (with F1).",
			"type": "boolean",
			"default": true
		},
		"visible_in_third_person": {
			"description": "Determines if the overlay is visible in third person.",
			"type": "boolean",
			"default": false
		}
	}
}