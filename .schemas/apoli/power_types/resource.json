{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/power_types/resource.json",
	"type": "object",
	"required": [
		"type",
		"min",
		"max",
		"hud_render"
	],
	"properties": {
		"type": {
			"description": "apoli:resource\nProvides a variable with an assignable minimum and maximum value that can be used as a timer, or other things.\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.",
			"markdownDescription": "### `apoli:resource`\nProvides a variable with an assignable minimum and maximum value that can be used as a timer, or other things.\n## Power Type\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.\n\n[Power Type Documentation](https://origins.readthedocs.io/en/latest/json/power/)",
			"enum": [
				"apoli:resource",
				"origins:resource"
			]
		},
		"min": {
			"description": "The minimum value of the resource.",
			"type": "integer"
		},
		"max": {
			"description": "The maximum value of the resource.",
			"type": "integer"
		},
		"hud_render": {
			"description": "Determines how the resource is visualized on the HUD.",
			"$ref": "../../types/hud_render.json"
		},
		"start_value": {
			"description": "The value of the resource when the entity first receives the power. If not set, this will be set to the value of the min integer field.",
			"type": "integer"
		},
		"min_action": {
			"description": "If specified, this action will be executed on the entity whenever the minimum value is reached.",
			"$ref": "../../entity_action.json"
		},
		"max_action": {
			"description": "If specified, this action will be executed on the entity whenever the maximum value is reached.",
			"$ref": "../../entity_action.json"
		}
	}
}