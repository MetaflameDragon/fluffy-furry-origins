{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/entity_conditions/passenger_recursive.json",
	"type": "object",
	"required": [
		"type",
		"comparison",
		"compare_to"
	],
	"properties": {
		"type": {
			"description": "apoli:passenger_recursive\nChecks whether any of the entities in the riding chain is the actor entity.\nEntity Condition Types operate on an Entity, which also allows access to the world. These are available to be used in most powers in the condition object field (or entity_condition in other power/condition types), which restricts when a power is active.",
			"markdownDescription": "### `apoli:passenger_recursive`\nChecks whether any of the entities in the riding chain is the actor entity.\n## Entity Condition Type\nEntity Condition Types operate on an Entity, which also allows access to the world. These are available to be used in most powers in the condition object field (or entity_condition in other power/condition types), which restricts when a power is active.\n\n[Entity Condition Types Documentation](https://origins.readthedocs.io/en/latest/types/entity_Condition_types/)",
			"enum": [
				"apoli:passenger_recursive",
				"origins:passenger_recursive"
			]
		},
		"bientity_condition": {
			"description": "If specified, only check for the entities that fulfills the bi-entity condition.",
			"$ref": "../../bientity_condition.json"
		},
		"comparison": {
			"description": "How the number of entities that are currently riding the entity should be compared to the specified value.",
			"$ref": "../../types/comparison.json"
		},
		"compare_to": {
			"description": "Which value the number of entities currently riding the entity should be compared to.",
			"type": "integer"
		}
	}
}