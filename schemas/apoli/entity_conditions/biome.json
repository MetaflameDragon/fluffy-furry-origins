{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/entity_conditions/biome.json",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"description": "apoli:biome\nChecks whether the entity is in a specified biome.\nEntity Condition Types operate on an Entity, which also allows access to the world. These are available to be used in most powers in the condition object field (or entity_condition in other power/condition types), which restricts when a power is active.",
			"markdownDescription": "### `apoli:biome`\nChecks whether the entity is in a specified biome.\n## Entity Condition Type\nEntity Condition Types operate on an Entity, which also allows access to the world. These are available to be used in most powers in the condition object field (or entity_condition in other power/condition types), which restricts when a power is active.\n\n[Entity Condition Types Documentation](https://origins.readthedocs.io/en/latest/types/entity_Condition_types/)",
			"enum": [
				"apoli:biome",
				"origins:biome"
			]
		},
		"biome": {
			"description": "If specified, only evaluate the condition to true if the biome the entity is in matches the specified namespace and ID.",
			"$ref": "../../types/identifier.json"
		},
		"biomes": {
			"description": "If specified, only evaluate the condition to true if the biome the entity is in matches one of the specified namespace and IDs.",
			"type": "array",
			"items": {
				"$ref": "../../types/identifier.json"
			}
		},
		"condition": {
			"description": "If specified, only evaluate the condition to true if the biome the entity is in fulfills the specified biome condition type.",
			"$ref": "../../biome_condition.json"
		}
	}
}