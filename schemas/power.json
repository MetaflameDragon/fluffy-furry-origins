{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/power.json",
	"title": "Power Type",
	"description": "Power Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.",
	"markdownDescription": "## Power Type\nPower Types are what grants functionality to your origins! Each power has a type, specified with a type field in the JSON. Which type a power is defines which other fields it requires and supports.\n\n[Power Type Documentation](https://origins.readthedocs.io/en/latest/json/power/)",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"$ref": "./types/identifier.json"
		}
	},
	"if": {
		"required": [
			"type"
		]
	},
	"then": {
		"properties": {
			"name": {
				"description": "The display name of the power.\nCan be a literal string or a translation key.",
				"type": "string"
			},
			"description": {
				"description": "The description of the power.\nCan be a literal string or a translation key.",
				"type": "string"
			},
			"hidden": {
				"description": "If set to true, this power will not be displayed in the power list of the origin.",
				"type": "boolean",
				"default": false
			},
			"condition": {
				"description": "If set, this power will only be active when the player with this power fulfills the condition.",
				"$ref": "./entity_condition.json"
			},
			"loading_priority": {
				"description": "Specifies when this power is loaded.\nHigher numbers mean it's loaded later, which means it will override those with lower loading priorities which share the same ID.",
				"type": "integer",
				"default": 0
			},
			"badges": {
				"description": "If set, it will display icon(s) after the name of the power.",
				"type": "array",
				"items": {
					"$ref": "./types/badge.json"
				}
			},
			"skill": {
				"type": "object",
				"description": "(WARNING: Reuquires Skillful mod!)\nDefines the skill that unlocks this power when purchased.",
				"properties": {
					"icon": {
						"description": "The item which is displayed as the icon for the skill widget.",
						"$ref": "./types/item_stack.json"
					},
					"parent": {
						"description": "The skill identifier that will be the parent of this widget.",
						"$ref": "./types/identifier.json"
					},
					"background": {
						"description": "The ID of the texture that will be the background of the skill tree.",
						"$ref": "./types/identifier.json"
					},
					"condition": {
						"description": "Makes it so that the player can only buy the skill if they meet this condition.",
						"$ref": "./entity_condition.json"
					},
					"cost": {
						"description": "The amount of points that the player needs in order to purchase this skill.",
						"type": "integer",
						"default": 1
					}
				}
			}
		},
		"allOf": [
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_being_used",
								"origins:action_on_being_used"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_being_used.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_block_break",
								"origins:action_on_block_break"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_block_break.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_block_use",
								"origins:action_on_block_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_block_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_callback",
								"origins:action_on_callback"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_callback.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_entity_use",
								"origins:action_on_entity_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_entity_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_hit",
								"origins:action_on_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_item_use",
								"origins:action_on_item_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_item_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_land",
								"origins:action_on_land"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_land.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_on_wake_up",
								"origins:action_on_wake_up"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_on_wake_up.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_over_time",
								"origins:action_over_time"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_over_time.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_when_damage_taken",
								"origins:action_when_damage_taken"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_when_damage_taken.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:action_when_hit",
								"origins:action_when_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/action_when_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:active_self",
								"origins:active_self"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/active_self.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:attacker_action_when_hit",
								"origins:attacker_action_when_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/attacker_action_when_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:attribute",
								"origins:attribute"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/attribute.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:attribute_modify_transfer",
								"origins:attribute_modify_transfer"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/attribute_modify_transfer.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:burn",
								"origins:burn"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/burn.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:climbing",
								"origins:climbing"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/climbing.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:conditioned_attribute",
								"origins:conditioned_attribute"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/conditioned_attribute.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:conditioned_restrict_armor",
								"origins:conditioned_restrict_armor"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/conditioned_restrict_armor.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:cooldown",
								"origins:cooldown"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/cooldown.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:creative_flight",
								"origins:creative_flight"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/creative_flight.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:damage_over_time",
								"origins:damage_over_time"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/damage_over_time.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:disable_regen",
								"origins:disable_regen"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/disable_regen.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:effect_immunity",
								"origins:effect_immunity"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/effect_immunity.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:elytra_flight",
								"origins:elytra_flight"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/elytra_flight.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:entity_glow",
								"origins:entity_glow"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/entity_glow.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:entity_group",
								"origins:entity_group"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/entity_group.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:exhaust",
								"origins:exhaust"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/exhaust.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:fire_immunity",
								"origins:fire_immunity"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/fire_immunity.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:fire_projectile",
								"origins:fire_projectile"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/fire_projectile.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:freeze",
								"origins:freeze"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/freeze.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:ignore_water",
								"origins:ignore_water"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/ignore_water.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:inventory",
								"origins:inventory"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/inventory.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:invisibility",
								"origins:invisibility"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/invisibility.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:invulnerability",
								"origins:invulnerability"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/invulnerability.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:item_on_item",
								"origins:item_on_item"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/item_on_item.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:keep_inventory",
								"origins:keep_inventory"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/keep_inventory.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:launch",
								"origins:launch"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/launch.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:lava_vision",
								"origins:lava_vision"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/lava_vision.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:model_color",
								"origins:model_color"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/model_color.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_air_speed",
								"origins:modify_air_speed"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_air_speed.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_attribute",
								"origins:modify_attribute"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_attribute.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_block_render",
								"origins:modify_block_render"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_block_render.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_break_speed",
								"origins:modify_break_speed"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_break_speed.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_camera_submersion",
								"origins:modify_camera_submersion"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_camera_submersion.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_crafting",
								"origins:modify_crafting"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_crafting.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_damage_dealt",
								"origins:modify_damage_dealt"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_damage_dealt.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_damage_taken",
								"origins:modify_damage_taken"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_damage_taken.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_exhaustion",
								"origins:modify_exhaustion"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_exhaustion.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_falling",
								"origins:modify_falling"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_falling.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_fluid_render",
								"origins:modify_fluid_render"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_fluid_render.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_food",
								"origins:modify_food"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_food.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_grindstone",
								"origins:modify_grindstone"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_grindstone.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_harvest",
								"origins:modify_harvest"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_harvest.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_healing",
								"origins:modify_healing"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_healing.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_insomnia_ticks",
								"origins:modify_insomnia_ticks"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_insomnia_ticks.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_jump",
								"origins:modify_jump"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_jump.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_lava_speed",
								"origins:modify_lava_speed"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_lava_speed.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_player_spawn",
								"origins:modify_player_spawn"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_player_spawn.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_projectile_damage",
								"origins:modify_projectile_damage"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_projectile_damage.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_slipperiness",
								"origins:modify_slipperiness"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_slipperiness.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_status_effect_amplifier",
								"origins:modify_status_effect_amplifier"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_status_effect_amplifier.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_status_effect_duration",
								"origins:modify_status_effect_duration"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_status_effect_duration.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_swim_speed",
								"origins:modify_swim_speed"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_swim_speed.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_velocity",
								"origins:modify_velocity"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_velocity.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:modify_xp_gain",
								"origins:modify_xp_gain"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/modify_xp_gain.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:multiple",
								"origins:multiple"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/multiple.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:night_vision",
								"origins:night_vision"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/night_vision.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:overlay",
								"origins:overlay"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/overlay.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:particle",
								"origins:particle"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/particle.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:phasing",
								"origins:phasing"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/phasing.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_being_used",
								"origins:prevent_being_used"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_being_used.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_block_selection",
								"origins:prevent_block_selection"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_block_selection.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_block_use",
								"origins:prevent_block_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_block_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_death",
								"origins:prevent_death"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_death.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_elytra_flight",
								"origins:prevent_elytra_flight"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_elytra_flight.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_entity_collision",
								"origins:prevent_entity_collision"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_entity_collision.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_entity_render",
								"origins:prevent_entity_render"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_entity_render.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_entity_use",
								"origins:prevent_entity_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_entity_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_feature_render",
								"origins:prevent_feature_render"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_feature_render.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_game_event",
								"origins:prevent_game_event"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_game_event.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_item_use",
								"origins:prevent_item_use"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_item_use.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_sleep",
								"origins:prevent_sleep"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_sleep.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:prevent_sprinting",
								"origins:prevent_sprinting"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/prevent_sprinting.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:recipe",
								"origins:recipe"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/recipe.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:replace_loot_table",
								"origins:replace_loot_table"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/replace_loot_table.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:resource",
								"origins:resource"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/resource.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:restrict_armor",
								"origins:restrict_armor"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/restrict_armor.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:self_action_on_hit",
								"origins:self_action_on_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/self_action_on_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:self_action_on_kill",
								"origins:self_action_on_kill"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/self_action_on_kill.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:self_action_when_hit",
								"origins:self_action_when_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/self_action_when_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:self_glow",
								"origins:self_glow"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/self_glow.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:shader",
								"origins:shader"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/shader.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:shaking",
								"origins:shaking"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/shaking.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:simple",
								"origins:simple"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/simple.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:stacking_status_effect",
								"origins:stacking_status_effect"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/stacking_status_effect.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:starting_equipment",
								"origins:starting_equipment"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/starting_equipment.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:status_bar_texture",
								"origins:status_bar_texture"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/status_bar_texture.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:swimming",
								"origins:swimming"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/swimming.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:target_action_on_hit",
								"origins:target_action_on_hit"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/target_action_on_hit.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:toggle",
								"origins:toggle"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/toggle.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:toggle_night_vision",
								"origins:toggle_night_vision"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/toggle_night_vision.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:tooltip",
								"origins:tooltip"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/tooltip.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"enum": [
								"apoli:walk_on_fluid",
								"origins:walk_on_fluid"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/power_types/walk_on_fluid.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:can_walk_on_powder_snow"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/can_walk_on_powder_snow.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:food_effect_immunity"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/food_effect_immunity.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:mob_neutrality"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/mob_neutrality.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:modify_size"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/modify_size.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:prevent_block_slowness"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/prevent_block_slowness.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:radial_menu"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/radial_menu.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "extraorigins:start_riding"
						}
					}
				},
				"then": {
					"$ref": "extraorigins/power_types/start_riding.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:action_on_block_place"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/action_on_block_place.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:action_on_item_pickup"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/action_on_item_pickup.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:action_on_key_sequence"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/action_on_key_sequence.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:invisibility"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/invisibility.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:model_flip"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/model_flip.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:modify_hurt_ticks"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/modify_hurt_ticks.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:prevent_block_place"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/prevent_block_place.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:prevent_item_pickup"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/prevent_item_pickup.json"
				}
			},
			{
				"if": {
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"const": "eggolib:prevent_item_use"
						}
					}
				},
				"then": {
					"$ref": "eggolib/power_types/prevent_item_use.json"
				}
			}
		]
	}
}