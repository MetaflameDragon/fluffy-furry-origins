{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/item_action.json",
	"title": "Item Action Type",
	"description": "Item Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
	"markdownDescription": "## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"$ref": "./types/identifier.json"
		}
	},
	"if": {
		"required": [
			"type"
		]
	},
	"then": {
		"properties": {
			"inverted": {
				"description": "If true, the condition acts inverted.",
				"type": "boolean",
				"default": false
			}
		},
		"allOf": [
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:consume",
								"origins:consume"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/item_actions/consume.json"
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:damage",
								"origins:damage"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/item_actions/damage.json"
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:merge_nbt",
								"origins:merge_nbt"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/item_actions/merge_nbt.json"
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:modify",
								"origins:modify"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/item_actions/modify.json"
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:remove_enchantment",
								"origins:remove_enchantment"
							]
						}
					}
				},
				"then": {
					"$ref": "apoli/item_actions/remove_enchantment.json"
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:and",
								"origins:and"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/and.json",
					"type": "object",
					"required": [
						"type",
						"actions"
					],
					"properties": {
						"type": {
							"description": "apoli:and\nExecutes all provided actions in order.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:and`\nExecutes all provided actions in order.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:and",
								"origins:and"
							]
						},
						"actions": {
							"description": "These actions will be executed one after the other (but in the same tick).",
							"type": "array",
							"items": {
								"$ref": "./item_action.json"
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:chance",
								"origins:chance"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/chance.json",
					"type": "object",
					"required": [
						"type",
						"action"
					],
					"properties": {
						"type": {
							"description": "apoli:chance\nExecutes the provided action only with a specific chance.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:chance`\nExecutes the provided action only with a specific chance.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:chance",
								"origins:chance"
							]
						},
						"action": {
							"description": "The action which might be executed.",
							"$ref": "./item_action.json"
						},
						"chance": {
							"description": "The chance that the action will execute, from 0 to 1. (E.g. 0.1 means 10% chance, 0.95 means 95% chance).",
							"type": "number",
							"minimum": 0,
							"maximum": 1
						},
						"fail_action": {
							"description": "The action to execute if the specified action in the action field is not executed.",
							"$ref": "./item_action.json"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:choice",
								"origins:choice"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/choice.json",
					"type": "object",
					"required": [
						"type",
						"actions"
					],
					"properties": {
						"type": {
							"description": "apoli:choice\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:choice`\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:choice",
								"origins:choice"
							]
						},
						"actions": {
							"description": "Each object has to have an element Action and a weight Integer.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"element": {
										"$ref": "./item_action.json"
									},
									"weight": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:delay",
								"origins:delay"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/delay.json",
					"type": "object",
					"required": [
						"type",
						"action",
						"ticks"
					],
					"properties": {
						"type": {
							"description": "apoli:delay\nExecutes the provided action after a set amount of ticks.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:delay`\nExecutes the provided action after a set amount of ticks.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:delay",
								"origins:delay"
							]
						},
						"action": {
							"description": "The action which will be executed after the delay.",
							"$ref": "./item_action.json"
						},
						"ticks": {
							"description": "The amount of ticks until the action is executed.",
							"type": "integer",
							"minimum": 1
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:if_else",
								"origins:if_else"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/if_else.json",
					"type": "object",
					"required": [
						"type",
						"condition",
						"if_action"
					],
					"properties": {
						"type": {
							"description": "apoli:if_else\nExecutes an action only if a condition holds, and optionally executes another action when it doesn't hold.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:if_else`\nExecutes an action only if a condition holds, and optionally executes another action when it doesn't hold.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:if_else",
								"origins:if_else"
							]
						},
						"condition": {
							"description": "A condition based on the type of action.",
							"$ref": "./item_condition.json"
						},
						"if_action": {
							"description": "The action which is executed when the condition evaluates to true.",
							"$ref": "./item_action.json"
						},
						"else_action": {
							"description": "If present, this action will be executed when the condition evaluates to false.",
							"$ref": "./item_action.json"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:if_else_list",
								"origins:if_else_list"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/if_else_list.json",
					"type": "object",
					"required": [
						"type",
						"actions"
					],
					"properties": {
						"type": {
							"description": "apoli:if_else_list\nChecks a list of actions associated with conditions, and executes the first one in the list for which the condition holds. Basically a less indentation-heavy way to represent a deeply nested If-Else (Meta Action Type).\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:if_else_list`\nChecks a list of actions associated with conditions, and executes the first one in the list for which the condition holds. Basically a less indentation-heavy way to represent a deeply nested If-Else (Meta Action Type).\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:if_else_list",
								"origins:if_else_list"
							]
						},
						"actions": {
							"description": "Each object has to have an action Action Type object and a condition Condition Type object.",
							"type": "array",
							"items": {
								"type": "object",
								"required": [
									"action",
									"condition"
								],
								"properties": {
									"condition": {
										"$ref": "./item_condition.json"
									},
									"action": {
										"$ref": "./item_action.json"
									}
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:nothing",
								"origins:nothing"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/nothing.json",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"description": "apoli:nothing\nDoes nothing. Can be used as a backup in case an action is not optional in some place.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:nothing`\nDoes nothing. Can be used as a backup in case an action is not optional in some place.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:nothing",
								"origins:nothing"
							]
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"enum": [
								"apoli:side",
								"origins:side"
							]
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/apoli/meta_actions/side.json",
					"type": "object",
					"required": [
						"type",
						"action"
					],
					"properties": {
						"type": {
							"description": "apoli:side\nExecutes the specified action type on the specified \"side\".\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `apoli:side`\nExecutes the specified action type on the specified \"side\".\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"enum": [
								"apoli:side",
								"origins:side"
							]
						},
						"action": {
							"description": "The action to execute.",
							"$ref": "./item_action.json"
						},
						"side": {
							"description": "Determines where to execute the specified action type. Accepts \"client\" or \"server\"",
							"enum": [
								"client",
								"server"
							]
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"type": {
							"const": "eggolib:loop"
						}
					}
				},
				"then": {
					"$DONT_EXPORT": true,
					"$id": "https://snavesutit.github.io/origins-mod-schemas/schemas/eggolib/meta_actions/loop.json",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"description": "eggolib:loop\nExecutes an action for the specified amount of iterations.\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.",
							"markdownDescription": "### `eggolib:loop`\nExecutes an action for the specified amount of iterations.\n## Item Action Type\nItem Action Types operate on a stack of items. These are available to power/action types that provides an item_action object field.\n\n[Item Action Types Documentation](https://origins.readthedocs.io/en/latest/types/item_Action_types/)",
							"$ignoreInvalidRef": true,
							"const": "eggolib:loop"
						},
						"before_action": {
							"description": "If specified, this action will be executed before the loop starts.",
							"$ref": "./item_action.json"
						},
						"action": {
							"description": "If specified, this action will be executed for each iteration of the loop.",
							"$ref": "./item_action.json"
						},
						"after_action": {
							"description": "If specified, this action will be executed after the loop ends.",
							"$ref": "./item_action.json"
						},
						"score": {
							"description": "If specified, this value will be used as the amount of iterations for the loop.",
							"$ref": "./types/scoreboard.json"
						},
						"value": {
							"description": "If specified and if score is not specified, this value will be used as the amount of iterations for the loop.",
							"type": "integer"
						}
					}
				}
			}
		]
	}
}